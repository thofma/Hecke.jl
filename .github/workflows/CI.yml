name: Run tests

on:
  push:
    branches:
      - 'master'
      - 'release-'
    tags: '*'
  pull_request:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
    -
      if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"
      uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.os == 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - '1.0'
          - '1.1'
          - '1.3'
          - '1.5'
          - '1.6'
          - 'nightly'
        julia-arch:
          - x64
        os:
          - ubuntu-latest
          - macOS-latest
            #- windows-latest
        exclude:
          # Reduce the number of macOS jobs, as fewer can be run in parallel
          - os: macOS-latest
            julia-version: '1.1'
          - os: macOS-latest
            julia-version: '1.2'
          - os: macOS-latest
            julia-version: '1.3'
          - os: macOS-latest
            julia-version: '1.4'
          - os: macOS-latest
            julia-version: '1.5'

    steps:
      - uses: actions/checkout@v2
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts 
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Build package"
        uses: julia-actions/julia-buildpkg@latest
      - name: "Run tests"
        uses: julia-actions/julia-runtest@latest
        #      - name: "Process code coverage"
        #        uses: julia-actions/julia-processcoverage@v1
        #      - name: "Upload coverage data to Codecov"
        #        uses: codecov/codecov-action@v1


    # If we build on all branches, we need the following to not run ci twice on own PRs
    # if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-docdeploy@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
