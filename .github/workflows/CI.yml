name: Run tests

on:
  push:
    branches:
      - 'master'
      - 'release-'
    tags: '*'
  pull_request:

concurrency:
  # group by workflow and ref; the last slightly strange component ensures that for pull
  # requests, we limit to 1 concurrent job, but for the master branch we don't
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/master' || github.run_number }}
  # Cancel intermediate builds, but only if it is a pull request build.
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.os == 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - '1.6'
          - '~1.7.0-0'
          - 'nightly'
        julia-arch:
          - x64
        os:
          - ubuntu-latest
          - macOS-latest
            #- windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Build package"
        uses: julia-actions/julia-buildpkg@latest
      - name: "Run tests"
        env:
          HECKE_TEST_PARALLEL: "2"

        uses: julia-actions/julia-runtest@latest
        #      - name: "Process code coverage"
        #        uses: julia-actions/julia-processcoverage@v1
        #      - name: "Upload coverage data to Codecov"
        #        uses: codecov/codecov-action@v1

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - run: |
          git config user.name github-actions # mike needs a user name, but we do not push the commit, so all is fine
          git config user.email github-actions@github.com

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-docdeploy@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
