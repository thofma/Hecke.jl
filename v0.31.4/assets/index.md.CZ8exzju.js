import{_ as e,c as a,o as n,a6 as s}from"./chunks/framework.6Ym_72DL.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Hecke","tagline":"Computational number theory for everyone","actions":[{"theme":"alt","text":"Getting Started","link":"/start/"},{"theme":"alt","text":"Manual","link":"/manual/"},{"theme":"alt","text":"View on Github","link":"https://github.com/thofma/Hecke.jl"}]},"features":[{"title":"What is Hecke?","details":"Hecke is a software package for computational algebraic number theory. It is written in julia and makes use of the computer algebra packages Nemo and AbstractAlgebra."},{"title":"OSCAR","details":"Hecke is part of the [OSCAR](https://www.oscar-system.org/) system, which covers, in addition to number theory, also commutative algebra, algebraic geometry, group theory and polyhedral geometry."}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),t={name:"index.md"},i=s(`<h2 id="Features" tabindex="-1">Features <a class="header-anchor" href="#Features" aria-label="Permalink to &quot;Features {#Features}&quot;">​</a></h2><ul><li><p>Number fields (absolute, relative, simple and non-simple)</p></li><li><p>Orders and ideals in number fields</p></li><li><p>Class and unit group computations of orders</p></li><li><p>Lattice enumeration</p></li><li><p>Sparse linear algebra</p></li><li><p>Class field theory</p></li><li><p>Abelian groups</p></li><li><p>Associative algebras</p></li><li><p>Ideals and orders in (semsimple) associative algebras</p></li><li><p>Locally free class groups of orders in semisimple algebras</p></li><li><p>Quadratic and Hermitian forms and lattices</p></li></ul><h2 id="Citing-Hecke" tabindex="-1">Citing Hecke <a class="header-anchor" href="#Citing-Hecke" aria-label="Permalink to &quot;Citing Hecke {#Citing-Hecke}&quot;">​</a></h2><p>If your research depends on computations done with Hecke, please consider giving us a formal citation:</p><ul><li>Claus Fieker, William Hart, Tommy Hofmann and Fredrik Johansson, <a href="https://doi.acm.org/10.1145/3087604.3087611" target="_blank" rel="noreferrer">Nemo/Hecke: Computer Algebra and Number Theory Packages for the Julia Programming Language</a>. In: Proceedings of ISSAC &#39;17, pages 157–164, New York, NY, USA, 2017. ACM.</li></ul><div class="language-bib vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bib</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>@inproceedings{nemo,</span></span>
<span class="line"><span>    author = {Fieker, Claus and Hart, William and Hofmann, Tommy and Johansson, Fredrik},</span></span>
<span class="line"><span>     title = {Nemo/Hecke: Computer Algebra and Number Theory Packages for the Julia Programming Language},</span></span>
<span class="line"><span> booktitle = {Proceedings of the 2017 ACM on International Symposium on Symbolic and Algebraic Computation},</span></span>
<span class="line"><span>    series = {ISSAC &#39;17},</span></span>
<span class="line"><span>      year = {2017},</span></span>
<span class="line"><span>     pages = {157--164},</span></span>
<span class="line"><span>  numpages = {8},</span></span>
<span class="line"><span>       url = {https://doi.acm.org/10.1145/3087604.3087611},</span></span>
<span class="line"><span>       doi = {10.1145/3087604.3087611},</span></span>
<span class="line"><span> publisher = {ACM},</span></span>
<span class="line"><span>   address = {New York, NY, USA},</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="Acknowledgement" tabindex="-1">Acknowledgement <a class="header-anchor" href="#Acknowledgement" aria-label="Permalink to &quot;Acknowledgement {#Acknowledgement}&quot;">​</a></h2><p>Hecke is part of the <a href="https://www.oscar-system.org/" target="_blank" rel="noreferrer">OSCAR</a> project and the development is supported by the Deutsche Forschungsgemeinschaft DFG within the Collaborative Research Center TRR 195.</p>`,8),l=[i];function r(o,p,c,d,m,h){return n(),a("div",null,l)}const b=e(t,[["render",r]]);export{g as __pageData,b as default};
